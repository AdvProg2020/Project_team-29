@startuml
class Main
class Singleton
Main -- Singleton
Singleton +-- User
User <-- Manager
User <-- Seller
User <-- Buyer
Singleton +-- Request
Singleton +-- Order
Singleton +-- Log
Log <-- LogBuy
Log <-- LogSell
Singleton +-- Product
Singleton +-- Sale
Singleton +-- Comment
Singleton +-- Category
Singleton +-- Rating
Singleton +-- Coupon
Singleton +-- Filter
Singleton +-- ShoppingCart

class Main {
    +main(String[] args)
}

class Singleton {
    -{static} ArrayList<Coupon> allCoupons
    -{static} ArrayList<Product> allProducts
    -{static} ArrayList<Request> allRequest
    -{static} ArrayList<Sale> allSales
    -{static} ArrayList<User>allUsers
    -{static} ArrayList<Manager> allManagers
    -{static} ArrayList<Buyer> allBuyers
    -{static} ArrayList<Seller> allSellers
    -{static} ArrayList<Category> allCategoriesAndSubcategories
    -{static} ArrayList<Filter> allFilters
    -{static} ArrayList<String> positionOfUser
    +String[][3] availableSorts : ["Sort By Date", "Sort By Rating", "Sort By views"]
    -{static} String currentSortBeingUsed = "Sort By Views"
    -{static} ArrayList<Product> existingProducts
    +Singleton() // constructor
    +getMatcher (String regex, String str) : Matcher
    +isDateAndTimeValid (String dateAndTime) : boolean
    +login-RegisterPage () : void
    +mainPage () : void
    +showAvailableSorts () : void
    +sort (String sort) : void
    +showCurrentSort () : void
    +disableSort () : void // sets the currentSortBeingUsed to "Sort By Views"
    +showExistingProducts (String page) : void // if we are in the offs page exclude the products that are not on sale
}

class User {
    -String username
    -String firstName
    -String lastName
    -String email
    -String phoneNumber
    -String password
    -boolean isLoggedIn = false
    +User (String username) //constructor
    +{abstract}register () : void
    +isThereAccountWithUsername (String username) : boolean
    +isEmailValid (String email) : boolean
    +isPhoneNumberValid (String phoneNumber) : boolean
    +setPersonalInfo(String firstName, String lastName, String email, String phoneNumber, String password) : void
    +login () : void // just changes isLoggedIn to true
    +editField (String field) : void // determine which field is going to change and ask for the replacement if field is username an error will show

}

class Manager {
    -int numberOfManagers = 0
    +Manager (String username) // constructor
    +register () // age manager avali e normal ezafe beshe vagarna darkhast bede b manager avali
    +deleteUser(String username) : void // also check if such a username exists
    +listUsernames () : void
    +displayInfo (String username) : void // also check if such a username exists
}

class Buyer {
    -double credit
    -ShoppingCart cart
    -LogBuy logBuy
    +Buyer (String username) // constructor
    +register () // normal ezafe beshe
    +deleteUser() : void
    +displayInfo () : void
    +purchase () : void
    +showLogBuy () : void
    +showOrder (String orderId) : void // also check if it exists
    for this buyer
    +rate (String productId , Rating rating) : void // check if product exists and if the buyer has bought it and create the rating
}

class Seller {
    -double credit = 0
    -String companyName
    -String companyAddress
    -LogSell logSell
    -ArrayList<Product> productsSelling
    -ArrayList<Sale> salesTheyHave
    +Seller (String username, String companyName, String companyAddress) // constuctor
    +register () //darkhast bede be modir
    +deleteUser() : void
    +displayInfo () : void
    +displayCompanyInfo () : void
    +displaySalesHistory () : void
    +displayProductsList () : void
    +displayBalance () : void
}

@enduml





























